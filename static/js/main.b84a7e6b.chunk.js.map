{"version":3,"sources":["components/Navbar.tsx","components/Loading.tsx","components/Articles.tsx","components/Artists.tsx","components/Artist.tsx","components/Content.tsx","components/Search.tsx","components/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","root","width","ListItemLink","props","icon","primary","to","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","Navbar","classes","className","List","aria-label","theme","createStyles","backdrop","zIndex","drawer","color","Loading","Backdrop","open","CircularProgress","table","minWidth","Articles","ARTICLES","gql","useQuery","loading","error","data","articles","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","article","key","id","hover","onClick","href","window","location","assign","title","author","name","published_at","ARTISTS","Artists","history","useHistory","useState","page","setPage","variables","artists","artist","_id","push","bio","birthday","nationality","Box","display","justifyContent","m","IconButton","disabled","flexDirection","text","margin","spacing","large","height","paper","Artist","useParams","ARTIST","console","log","Grid","container","item","xs","Avatar","alt","src","imageUrl","Container","Typography","variant","md","artworks","length","artwork","displayLabel","date","Content","exact","path","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","Search","setSearch","SEARCH","client","useApolloClient","InputBase","placeholder","value","input","onChange","event","target","onKeyPress","slugs","toLowerCase","split","join","query","then","catch","inputProps","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","Layout","setOpen","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","Drawer","anchor","Divider","App","Boolean","hostname","match","ApolloClient","uri","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b84a7e6b.chunk.js","sourcesContent":["import React, { useMemo, forwardRef, ReactElement } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n} from \"react-router-dom\";\nimport { ListItem, ListItemIcon, ListItemText, List } from \"@material-ui/core\";\nimport { Omit } from \"@material-ui/types\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 360,\n  },\n});\ninterface ListItemLinkProps {\n  icon: ReactElement;\n  primary: string;\n  to: string;\n}\n\nconst ListItemLink = (props: ListItemLinkProps) => {\n  const { icon, primary, to } = props;\n\n  const renderLink = useMemo(\n    () =>\n      forwardRef<any, Omit<RouterLinkProps, \"to\">>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n};\n\nconst Navbar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List aria-label=\"main\">\n        <ListItemLink to=\"/\" primary=\"Home\" icon={<HomeIcon />} />\n        <ListItemLink to=\"/artists\" primary=\"Artists\" icon={<GroupIcon />} />\n        <ListItemLink\n          to=\"/articles\"\n          primary=\"Articles\"\n          icon={<DescriptionIcon />}\n        />\n      </List>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer - 1,\n      color: \"#fff\",\n    },\n  })\n);\n\nconst Loading: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableContainer,\n  Paper,\n} from \"@material-ui/core\";\nimport Loading from \"./Loading\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst Articles: React.FC = () => {\n  const classes = useStyles();\n\n  const ARTICLES = gql`\n    {\n      articles {\n        id\n        title\n        href\n        author {\n          name\n        }\n        published_at\n      }\n    }\n  `;\n\n  const handleRowClick = (href: string) => {\n    window.location.assign(\"https://www.artsy.net\" + href);\n  };\n\n  const { loading, error, data } = useQuery(ARTICLES);\n\n  if (loading) return <Loading />;\n  if (error) return <p>Something went wrong...</p>;\n\n  interface Article {\n    id: string;\n    title: string;\n    author: { name: string };\n    href: string;\n    published_at: string;\n  }\n\n  const articles: Article[] = data.articles;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Articles</TableCell>\n            <TableCell>Author</TableCell>\n            <TableCell>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {articles.map((article: Article) => {\n            return (\n              <TableRow\n                key={article.id}\n                hover\n                onClick={() => handleRowClick(article.href)}\n              >\n                <TableCell>{article.title || \"n/a\"}</TableCell>\n                <TableCell>{article.author.name || \"n/a\"}</TableCell>\n                <TableCell>{article.published_at || \"n/a\"}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Articles;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableContainer,\n  Paper,\n  IconButton,\n  Box,\n} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport Loading from \"./Loading\";\n\nconst ARTISTS = gql`\n  query artists($page: Int!) {\n    artists(page: $page) {\n      name\n      bio\n      birthday\n      nationality\n      _id\n    }\n  }\n`;\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst Artists: React.FC = () => {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const [page, setPage] = useState(1);\n\n  const { loading, error, data } = useQuery(ARTISTS, {\n    variables: { page },\n  });\n\n  const handleRowClick = (id: string) => {\n    history.push(\"/artist/\" + id);\n  };\n\n  interface Artist {\n    [index: string]: string;\n    name: string;\n    _id: string;\n    bio: string;\n    birthday: string;\n    nationality: string;\n  }\n\n  if (loading) return <Loading />;\n  if (error) return <p>Something went wrong...</p>;\n\n  const artists: Artist[] = data.artists;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Artists</TableCell>\n            <TableCell>Bio</TableCell>\n            <TableCell>Birthday</TableCell>\n            <TableCell>nationality</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {artists.map((artist: Artist) => {\n            return (\n              <TableRow\n                key={artist._id}\n                hover\n                onClick={() => handleRowClick(artist._id)}\n              >\n                <TableCell>{artist.name || \"n/a\"}</TableCell>\n                <TableCell>{artist.bio || \"n/a\"}</TableCell>\n                <TableCell>{artist.birthday || \"n/a\"}</TableCell>\n                <TableCell>{artist.nationality || \"n/a\"}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Box display=\"flex\" justifyContent=\"flex-end\" m={1}>\n        <IconButton disabled={page === 1} onClick={() => setPage(page - 1)}>\n          <NavigateBeforeIcon />\n        </IconButton>\n        <IconButton onClick={() => setPage(page + 1)}>\n          <NavigateNextIcon />\n        </IconButton>\n      </Box>\n    </TableContainer>\n  );\n};\n\nexport default Artists;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  Avatar,\n  Typography,\n  Container,\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport Loading from \"./Loading\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    text: {\n      margin: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(17),\n      height: theme.spacing(17),\n    },\n    paper: {\n      height: theme.spacing(5),\n    },\n  })\n);\n\nconst Artist: React.FC = () => {\n  const classes = useStyles();\n  const { id } = useParams();\n\n  const [page, setPage] = useState(1);\n\n  const ARTIST = gql`\n    query artist($id: String!, $page: Int!) {\n      artist(id: $id) {\n        name\n        birthday\n        gender\n        imageUrl\n        nationality\n        bio\n        articles {\n          author {\n            name\n          }\n          slug\n          title\n          id\n        }\n        artworks(page: $page) {\n          date\n          displayLabel\n        }\n      }\n    }\n  `;\n\n  interface Article {\n    author: { name: string };\n    slug: string;\n    title: string;\n    id: string;\n  }\n\n  interface Artwork {\n    date: string;\n    displayLabel: string;\n    _id: string;\n  }\n  interface Artist {\n    name: string;\n    birthday: string;\n    gender: string;\n    imageUrl: string;\n    nationality: string;\n    bio: string;\n    articles: Article[];\n    artworks: Artwork[];\n  }\n\n  const { loading, error, data } = useQuery(ARTIST, {\n    variables: { id, page },\n  });\n\n  console.log(error);\n\n  if (id === \"404\") return <div>Artist not found...</div>;\n  if (loading) return <Loading />;\n  if (error) return <div>Something went wrong...</div>;\n\n  const artist: Artist = data.artist;\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} className={classes.root}>\n        <Avatar\n          alt={artist.name}\n          src={artist.imageUrl}\n          className={classes.large}\n        />\n        <Container className={classes.text}>\n          <Typography variant=\"h4\">{artist.name}</Typography>\n          <Typography variant=\"subtitle2\">{artist.bio}</Typography>\n          <Typography variant=\"subtitle1\">{artist.nationality}</Typography>\n          <Typography variant=\"overline\">{artist.birthday}</Typography>\n        </Container>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        {/* Move to seperate component */}\n        {artist.artworks.length === 0 ? (\n          <Typography variant=\"subtitle1\" className={classes.text}>\n            No artworks found for this artist\n          </Typography>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Artworks</TableCell>\n                  <TableCell>Date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {artist.artworks.map((artwork: Artwork) => {\n                  return (\n                    <TableRow key={artwork._id}>\n                      <TableCell>{artwork.displayLabel}</TableCell>\n                      <TableCell>{artwork.date}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Grid>\n      <Grid item xs={12} md={6}>\n        {/* Move to seperate component */}\n        {artist.articles.length === 0 ? (\n          <Typography variant=\"subtitle1\" className={classes.text}>\n            No articles found for this artist\n          </Typography>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Articles</TableCell>\n                  <TableCell>Author</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {artist.articles.map((article: Article) => {\n                  return (\n                    <TableRow key={article.id}>\n                      <TableCell>{article.title}</TableCell>\n                      <TableCell>{article.author.name}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Artist;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Articles from \"./Articles\";\nimport Artists from \"./Artists\";\nimport Artist from \"./Artist\";\n\nconst Content: React.FC = () => {\n  return (\n    <div className=\"Content\">\n      <Switch>\n        <Route exact path=\"/\">\n          Home\n        </Route>\n        <Route exact path=\"/articles\">\n          <Articles />\n        </Route>\n        <Route exact path=\"/artists\">\n          <Artists />\n        </Route>\n        <Route path=\"/artist/:id\">\n          <Artist />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { useState, ChangeEvent } from \"react\";\nimport {\n  createStyles,\n  fade,\n  Theme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { InputBase } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { gql } from \"apollo-boost\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nconst Search: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [search, setSearch] = useState(\"\");\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.value);\n    setSearch(event.target.value);\n  };\n\n  const SEARCH = gql`\n    query artists($slugs: [String]) {\n      artists(slugs: $slugs) {\n        _id\n      }\n    }\n  `;\n\n  const client = useApolloClient();\n\n  const handleSubmit = (event: any) => {\n    if (event.key !== \"Enter\") return;\n    const slugs = search.toLowerCase().split(\" \").join(\"-\");\n    client\n      .query({\n        query: SEARCH,\n        variables: { slugs },\n      })\n      .then(({ data }) => {\n        history.push(\"/artist/\" + data.artists[0]._id);\n        setSearch(\"\");\n      })\n      .catch(() => {\n        history.push(\"/artist/404\");\n        setSearch(\"\");\n      });\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        value={search}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        onChange={handleChange}\n        onKeyPress={handleSubmit}\n        inputProps={{ \"aria-label\": \"search\" }}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport {\n  CssBaseline,\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Drawer,\n  Divider,\n  Grid,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Navbar from \"./Navbar\";\nimport Content from \"./Content\";\nimport Search from \"./Search\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  })\n);\n\nconst Layout: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Artsy\n          </Typography>\n          <Search />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <Navbar />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Content />\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"./components/Layout\";\nimport Content from \"./components/Content\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Layout />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nconst client = new ApolloClient({\n  uri: \"https://metaphysics-staging.artsy.net/\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}